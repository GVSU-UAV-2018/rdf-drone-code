#!/usr/bin/env python2

if __name__ != '__main__':
    print 'loading '+__name__+' as a module: what do you think you\'re doing?'
    os.exit(-1)
from time import sleep

from gnuradio import gr
from gnuradio import blocks
from gnuradio import audio

import programsetup
from blocks.wavsource import WavSource
from blocks.top_level_radio_processing import RDFRadioProcessing
from blocks.top_level_radio_processing import RDFRadioProcessing_output_types
from blocks.top_level_radio_processing import RDFRadioProcessing_output_slots
from blocks.save_to_csv import SaveToCsv
from blocks.tonesource import ToneSource

config = programsetup.get_config()
directions = config['search pattern']['directions']
hold_time = config['search pattern']['hold time']

class Main(gr.top_block):
    def __init__(self):
        gr.top_block.__init__(self)

        self.source = WavSource(
            radio_config=config['radio'],
            playback_folder=config['general']['recording folder'],
            throttle=True)

        self.processing = RDFRadioProcessing(
            detection_config=config['detect'],
            input_sample_rate=config['radio']['sample rate'])

        self.sink = SaveToCsv(
            config['general']['processed data folder'])

        self.connect((self.source, 0), (self.processing, 0))
        self.connect((self.source, 1), (self.processing, 1))

        self.connect((self.source, 0), blocks.complex_to_real(), blocks.multiply_const_ff(1), audio.sink(48000))

        for i in RDFRadioProcessing_output_slots.values():
            self.connect((self.processing, i), (self.sink, i))

main = Main()

for direction in directions:
    print 'direction: {0}'.format(direction)
    main.source.play(direction)
    main.start()
    sleep(10)
    main.stop()
    main.wait()